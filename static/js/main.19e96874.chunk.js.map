{"version":3,"sources":["App.js","index.js"],"names":["App","props","pickedTracks","vkId","telegramId","icon","API_URL","onCheckboxChange","e","track","JSON","parse","currentTarget","dataset","index","url","title","artist","sendTracks","filter","length","fetch","method","headers","body","stringify","state","scheme","tracks","bridge","subscribe","a","detail","type","data","setState","send","id","keys","value","console","log","then","res","json","response","permission","key","req","result","Array","this","activePanel","map","before","size","style","width","height","marginRight","background","album","thumb","photo_68","backgroundSize","after","data-track","onChange","description","vertical","wide","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19e96874.chunk.js","sourcesContent":["import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, Panel, PanelHeader, Div, Card, SimpleCell, Checkbox, ConfigProvider, FixedLayout, Button, Separator } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './App.css';\n\nclass App extends React.Component {\n\tpickedTracks = [];\n\tvkId = null;\n\ttelegramId = null\n\ticon = 'data:image/svg+xml;charset=utf-8,%3Csvg%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20width%3D%2224%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cg%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%3Cpath%20d%3D%22m0%200h24v24h-24z%22%20opacity%3D%22.4%22%2F%3E%3Cpath%20d%3D%22m13%2011.4849987v5.6482897c0%204.5123987-.8747233%205.3834431-4.37440289%205.8421935-1.6682259.2186769-3.62559711-.5384568-3.62559711-3.1617096%200-1.2814037.80181302-2.498263%202.46114282-2.8162494%201.26723039-.2428462-.09078118.0181935%202.77607228-.5140396.6959753-.1292083.7748413-.3782301.7748413-.908791%200-.2664094-.0013183-2.5951438-.0022416-4.1936475l-.0073943-.0003862v-4.31781414s-.0054461-2.05827203%200-3.08739758c.0065136-1.23086488.6796458-1.68321833%202.6637921-2.08397579%200%200%203.0232113-.57396781%204.6852252-.87541989.367783-.06670761.6485622.07018054.6485622.49202579%200%200-.0106774%202.62210108%200%204.05433854.0031006.41590408-.168424.60420104-.5899711.67902227-1.6816987.29848801-4.8649278.86036181-4.8649278.86036181-.3738792.09182758-.5451011.35499958-.5451011.73329156z%22%20fill%3D%22%236f99c8%22%20fill-rule%3D%22nonzero%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E'\n    API_URL = 'https://s23209.h10.modhost.pro';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tscheme: 'bright_light',\n\t\t\ttracks: [],\n\t\t};\n\t}\n\n\tonCheckboxChange = (e) => {\n\t\tconst track = JSON.parse(e.currentTarget.dataset.track);\n\t\tthis.pickedTracks[track.index] = this.pickedTracks[track.index] ? null : { url: track.url, title: track.title, artist: track.artist };\n\t}\n\n\tsendTracks = () => {\n\t\tthis.pickedTracks = this.pickedTracks.filter(track => !!track);\n\t\t\n\t\tif (!this.pickedTracks.length) {\n\t\t\t// modal 'please pick tracks'\n\t\t\treturn;\n\t\t}\n\n\t\t// accept choice\n\n\t\tfetch(`${this.API_URL}/sendTracks?id=${this.telegramId}`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t  \t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(this.pickedTracks),\n\t\t})\n\t}\n\n\tasync componentDidMount() {\n\t\tbridge.subscribe(async ({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tthis.setState({ scheme: data.scheme });\n\t\t\t} else if (type === 'VKWebAppInitResult') {\n\t\t\t\tthis.vkId = (await bridge.send(\"VKWebAppGetUserInfo\", {})).id;\n\t\t\t\tthis.telegramId = (await bridge.send('VKWebAppStorageGet', {keys: ['telegramId']})).keys[0].value;\n                console.log(this.telegramId);\n\n\t\t\t\tif (this.telegramId === false || this.telegramId === 'false') {\n\t\t\t\t\tconst response = await fetch(`${this.API_URL}/getUser?id=${this.vkId}`).then(res => res.json());\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t\tconst permission = response.permission;\n\t\t\t\t\tthis.telegramId = response.telegramId;\n\n\t\t\t\t\tif (!permission) {\n\t\t\t\t\t\t// ask to auth\n\t\t\t\t\t\t// return\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.telegramId) {\n\t\t\t\t\t\t// need to authorization\n\t\t\t\t\t\t// return;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst req = await bridge.send('VKWebAppStorageSet', { key: 'telegramId', value: `${this.telegramId}` })\n\t\t\t\t\tconsole.log(req);\n\t\t\t\t}\n\n\t\t\t\tfetch(`${this.API_URL}/getTracks?id=${this.vkId}`)\n\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then(result => {\n\t\t\t\t\t\tthis.pickedTracks = new Array(result.tracks.length)\n\t\t\t\t\t\tthis.setState({ tracks: result.tracks })\n\t\t\t\t\t})\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<ConfigProvider scheme={ this.state.scheme }>\n\t\t\t\t<View activePanel=\"main\">\n\t\t\t\t\t<Panel id=\"main\">\n\t\t\t\t\t\t<PanelHeader>Audio Bot</PanelHeader>\n\t\t\t\t\t\t{ this.state.tracks.map((track, index) => \n\t\t\t\t\t\t\t(<Div key={ track.id }>\n\t\t\t\t\t\t\t\t<SimpleCell \n\t\t\t\t\t\t\t\t\tbefore={\n\t\t\t\t\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\t\t\t\t\tsize={\"m\"} \n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: 40, height: 40, marginRight: 10, background: `url(${ track.album ? track.album.thumb.photo_68 : this.icon}) no-repeat center #e5ebf1`, backgroundSize: 'cover'}} \n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\tafter={ <Checkbox data-track={JSON.stringify({ index, url: track.url, title: track.title, artist: track.artist })} onChange={ this.onCheckboxChange }/> } \n\t\t\t\t\t\t\t\t\tdescription={ track.artist } \n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ track.title } \n\t\t\t\t\t\t\t\t</SimpleCell>\n\t\t\t\t\t\t\t</Div>)\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<FixedLayout vertical=\"bottom\">\n\t\t\t\t\t\t\t<Separator wide />\n\t\t\t\t\t\t\t<Button onClick={ this.sendTracks } size='xl'>Скачать</Button>\n\t\t\t\t\t\t</FixedLayout>\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t\t</ConfigProvider>\n\t\t);\n\t}\n}\n\nexport default App;","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}