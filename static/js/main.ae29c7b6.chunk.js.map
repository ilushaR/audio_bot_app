{"version":3,"sources":["App.js","index.js"],"names":["App","props","pickedTracks","vkId","telegramId","permission","hash","icon","API_URL","refs","setSnackbar","setState","snackbar","layout","onClose","before","size","style","backgroundColor","fill","width","height","onCheckboxChange","e","track","JSON","parse","currentTarget","dataset","index","url","title","artist","sendTracks","a","bridge","send","then","res","result","catch","fetch","json","setActiveModal","filteredPickedTracks","method","headers","body","stringify","activeModal","filter","state","scheme","tracks","isShowButton","isLoading","isAllChecked","subscribe","detail","type","data","id","keys","value","console","log","response","key","Array","length","map","createRef","modal","this","modalBack","header","caption","marginTop","mode","href","target","activePanel","left","onClick","marginBottom","marginRight","background","album","thumb","photo_68","backgroundSize","after","data-track","onChange","description","vertical","wide","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae29c7b6.chunk.js","sourcesContent":["import React, { createRef, useRef } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, Panel, PanelHeader, Div, Card, SimpleCell, Checkbox, ConfigProvider, FixedLayout, Button, Separator, PanelHeaderButton, ModalRoot, ModalCard, Snackbar, Avatar, Spinner } from '@vkontakte/vkui';\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './App.css';\n\nclass App extends React.Component {\n\tpickedTracks = [];\n\tvkId = null;\n\ttelegramId = null;\n    permission = true;\n    hash = null;\n\ticon = 'data:image/svg+xml;charset=utf-8,%3Csvg%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20width%3D%2224%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cg%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%3Cpath%20d%3D%22m0%200h24v24h-24z%22%20opacity%3D%22.4%22%2F%3E%3Cpath%20d%3D%22m13%2011.4849987v5.6482897c0%204.5123987-.8747233%205.3834431-4.37440289%205.8421935-1.6682259.2186769-3.62559711-.5384568-3.62559711-3.1617096%200-1.2814037.80181302-2.498263%202.46114282-2.8162494%201.26723039-.2428462-.09078118.0181935%202.77607228-.5140396.6959753-.1292083.7748413-.3782301.7748413-.908791%200-.2664094-.0013183-2.5951438-.0022416-4.1936475l-.0073943-.0003862v-4.31781414s-.0054461-2.05827203%200-3.08739758c.0065136-1.23086488.6796458-1.68321833%202.6637921-2.08397579%200%200%203.0232113-.57396781%204.6852252-.87541989.367783-.06670761.6485622.07018054.6485622.49202579%200%200-.0106774%202.62210108%200%204.05433854.0031006.41590408-.168424.60420104-.5899711.67902227-1.6816987.29848801-4.8649278.86036181-4.8649278.86036181-.3738792.09182758-.5451011.35499958-.5451011.73329156z%22%20fill%3D%22%236f99c8%22%20fill-rule%3D%22nonzero%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E';\n    API_URL = 'http://185.233.83.146';\n    refs = [];\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tscheme: 'bright_light',\n\t\t\ttracks: [],\n            activeModal: null,\n            snackbar: null,\n            isShowButton: false,\n            isLoading: true,\n            isAllChecked: false\n\t\t};\n\t}\n\n    setSnackbar = () => {\n        this.setState({ snackbar:\n        <Snackbar\n            layout=\"vertical\"\n            onClose={() => this.setState({ snackbar: null })}\n            before={<Avatar size={24} style={{ backgroundColor: 'var(--accent)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\n        >\n            –ú—É–∑—ã–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏–ª–∞—Å—å. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è üéß\n        </Snackbar>\n        });\n    }\n\n\tonCheckboxChange = (e) => {\n\t\tconst track = JSON.parse(e.currentTarget.dataset.track);\n\t\tthis.pickedTracks[track.index] = this.pickedTracks[track.index] ? null : { url: track.url, title: track.title, artist: track.artist };\n        // this.setState({ isShowButton: !!this.filteredPickedTracks().length })\n\t}\n\n\tsendTracks = async () => {\n        if (!this.permission) {\n            return await bridge.send('VKWebAppJoinGroup', {'group_id': 184374271})\n                            .then((res) => this.permission = res.result)\n                            .catch(() => this.permission = false);;\n        }\n\n        if (!this.telegramId) {\n            this.hash = (await fetch(`${this.API_URL}/getHash?id=${this.vkId}`).then(res => res.json())).hash;\n            return this.setActiveModal('TelegramAuth');\n        }\n\n\t\tconst filteredPickedTracks = this.filteredPickedTracks();\n\t\t\n        this.setSnackbar();\n\n\t\tfetch(`${this.API_URL}/sendTracks?id=${this.telegramId}`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t  \t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(filteredPickedTracks),\n\t\t})\n\t}\n\n    setActiveModal = (activeModal) => {\n        this.setState({ activeModal });\n    };\n\n    filteredPickedTracks = () => {\n        return this.pickedTracks.filter(track => !!track)\n    }\n\n\tasync componentDidMount() {\n\t\tbridge.subscribe(async ({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tthis.setState({ scheme: data.scheme });\n\t\t\t} else if (type === 'VKWebAppInitResult') {\n                this.vkId = (await bridge.send(\"VKWebAppGetUserInfo\", {})).id;\n\n                await bridge.send('VKWebAppJoinGroup', {'group_id': 184374271})\n                        .then((res) => this.permission = res.result)\n                        .catch(() => this.permission = false);\n\t\t\t\t\n\t\t\t\tthis.telegramId = (await bridge.send('VKWebAppStorageGet', { keys: ['telegramId'] })).keys[0].value;\n                console.log(this.telegramId);\n\n                if (this.telegramId === 'null') {\n                    const response = await fetch(`${this.API_URL}/getUser?id=${this.vkId}`).then(res => res.json());\n                    this.telegramId = response.telegramId;\n                    console.log(this.telegramId);\n\n                    if (!this.telegramId) {\n                        this.hash = (await fetch(`${this.API_URL}/getHash?id=${this.vkId}`).then(res => res.json())).hash;\n                        this.setActiveModal('TelegramAuth');\n                    } else {\n                        await bridge.send('VKWebAppStorageSet', { key: 'telegramId', value: `${this.telegramId}` });\n                    }\n                }\n\n\t\t\t\tfetch(`${this.API_URL}/getTracks?id=${this.vkId}`)\n\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then(result => {\n\t\t\t\t\t\tthis.pickedTracks = new Array(result.tracks.length);\n                        this.refs = this.pickedTracks.map(() => createRef());\n\t\t\t\t\t\tthis.setState({ tracks: result.tracks, isLoading: false })\n\t\t\t\t\t})\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n        const modal = (<ModalRoot\n                        activeModal={this.state.activeModal}\n                        onClose={this.modalBack}\n                      >\n                        <ModalCard\n                            id={ 'TelegramAuth' }\n                            onClose={() => this.setActiveModal(null)}\n                            header='–ê–≤—Ç–æ—Ä–∏–∑—É–π—Å—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ'\n                            caption='–ß—Ç–æ–±—ã —è —Å–º–æ–≥ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–±–µ —Ç—Ä–µ–∫ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –≤ –Ω–µ–º'\n                        >\n                            <Button \n                                style={{ marginTop: 16 }} \n                                mode='secondary' size='xl' \n                                href={ `https://t.me/ilushaR_bot?start=${this.vkId}-${this.hash}` }\n                                target='_blank'\n                            >\n                                Telegram Authorization üîì\n                            </Button>\n                        </ModalCard>\n                      </ModalRoot>)\n\n\t\treturn (\n\t\t\t<ConfigProvider scheme={ this.state.scheme }>\n\t\t\t\t<View activePanel='main' modal={ modal }>\n\t\t\t\t\t<Panel id='main'>\n                        <PanelHeader \n                            left={\n                                <PanelHeaderButton onClick={ async () => {\n                                    // console.log(this.refs);\n                                    // this.refs.forEach(checkbox => {\n                                    //     console.log(checkbox);\n                                    // })\n                                    // this.pickedTracks = this.state.isAllChecked ? [] : this.state.tracks;\n                                    // this.setState({ isAllChecked: !this.state.isAllChecked, isShowButton: !this.state.isAllChecked  });\n                                } \n                                }>\n                                    { this.state.isAllChecked ? '–û—Ç–º–µ–Ω–∏—Ç—å' : '–í—ã–±—Ä–∞—Ç—å' } –≤—Å–µ\n                                </PanelHeaderButton>\n                            }\n                        >\n                            Audio Bot\n                        </PanelHeader>\n                        { this.state.isLoading \n                            ? <Spinner size=\"large\" style={{ marginTop: 20 }} />\n                            : <Div style={{ marginBottom: this.state.isShowButton ? 40 : 0 }}>\n\t\t\t\t\t\t        { this.state.tracks.map((track, index) => \n                                    <SimpleCell \n                                        key={ track.id }\n                                        before={\n                                            <Card \n                                                size='m' \n                                                style={{ width: 40, height: 40, marginRight: 10, background: `url(${ track.album && track.album.thumb ? track.album.thumb.photo_68 : this.icon}) no-repeat center #e5ebf1`, backgroundSize: 'cover'}} \n                                            />\n                                        } \n                                        after={ <Checkbox \n                                                    data-track={JSON.stringify({ index, url: track.url, title: track.title, artist: track.artist })} \n                                                    onChange={ this.onCheckboxChange } \n                                                /> } \n                                        description={ track.artist } \n                                    >\n                                        { track.title } \n                                    </SimpleCell>\n\t\t\t\t\t\t        )}\n                              </Div>\n                        }\n                        { this.state.isShowButton && \n\t\t\t\t\t\t<FixedLayout vertical='bottom'>\n\t\t\t\t\t\t\t<Separator wide />\n\t\t\t\t\t\t\t<Button \n                                onClick={ this.sendTracks } \n                                size='xl'\n                            >\n                                –°–∫–∞—á–∞—Ç—å\n                            </Button>\n\t\t\t\t\t\t</FixedLayout> }\n                        { this.state.snackbar }\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t\t</ConfigProvider>\n\t\t);\n\t}\n}\n\nexport default App;","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}