{"version":3,"sources":["App.js","index.js"],"names":["App","props","pickedTracks","vkId","telegramId","hash","icon","API_URL","setSnackbar","setState","snackbar","layout","onClose","before","size","style","backgroundColor","fill","width","height","onCheckboxChange","e","track","JSON","parse","currentTarget","dataset","index","url","title","artist","isShowButton","filteredPickedTracks","length","sendTracks","a","bridge","send","fetch","then","res","json","setActiveModal","method","headers","body","stringify","activeModal","filter","state","scheme","tracks","subscribe","detail","type","data","id","keys","value","console","log","response","permission","key","result","Array","modal","this","modalBack","header","caption","marginTop","mode","href","target","activePanel","left","onClick","map","marginRight","background","album","thumb","photo_68","backgroundSize","after","data-track","onChange","description","vertical","wide","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22cfe80c.chunk.js","sourcesContent":["import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, Panel, PanelHeader, Div, Card, SimpleCell, Checkbox, ConfigProvider, FixedLayout, Button, Separator, PanelHeaderButton, ModalRoot, ModalCard, Snackbar, Avatar } from '@vkontakte/vkui';\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './App.css';\n\nclass App extends React.Component {\n\tpickedTracks = [];\n\tvkId = null;\n\ttelegramId = null;\n    hash = null;\n\ticon = 'data:image/svg+xml;charset=utf-8,%3Csvg%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20width%3D%2224%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cg%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%3Cpath%20d%3D%22m0%200h24v24h-24z%22%20opacity%3D%22.4%22%2F%3E%3Cpath%20d%3D%22m13%2011.4849987v5.6482897c0%204.5123987-.8747233%205.3834431-4.37440289%205.8421935-1.6682259.2186769-3.62559711-.5384568-3.62559711-3.1617096%200-1.2814037.80181302-2.498263%202.46114282-2.8162494%201.26723039-.2428462-.09078118.0181935%202.77607228-.5140396.6959753-.1292083.7748413-.3782301.7748413-.908791%200-.2664094-.0013183-2.5951438-.0022416-4.1936475l-.0073943-.0003862v-4.31781414s-.0054461-2.05827203%200-3.08739758c.0065136-1.23086488.6796458-1.68321833%202.6637921-2.08397579%200%200%203.0232113-.57396781%204.6852252-.87541989.367783-.06670761.6485622.07018054.6485622.49202579%200%200-.0106774%202.62210108%200%204.05433854.0031006.41590408-.168424.60420104-.5899711.67902227-1.6816987.29848801-4.8649278.86036181-4.8649278.86036181-.3738792.09182758-.5451011.35499958-.5451011.73329156z%22%20fill%3D%22%236f99c8%22%20fill-rule%3D%22nonzero%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E';\n    API_URL = 'https://s23209.h10.modhost.pro';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tscheme: 'bright_light',\n\t\t\ttracks: [],\n            activeModal: null,\n            snackbar: null, \n            isShowButton: false,\n\t\t};\n\t}\n\n    setSnackbar = () => {\n        this.setState({ snackbar:\n        <Snackbar\n            layout=\"vertical\"\n            onClose={() => this.setState({ snackbar: null })}\n            before={<Avatar size={24} style={{ backgroundColor: 'var(--accent)' }}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\n        >\n            –ú—É–∑—ã–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏–ª–∞—Å—å. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è üéß\n        </Snackbar>\n        });\n    }\n\n\tonCheckboxChange = (e) => {\n\t\tconst track = JSON.parse(e.currentTarget.dataset.track);\n\t\tthis.pickedTracks[track.index] = this.pickedTracks[track.index] ? null : { url: track.url, title: track.title, artist: track.artist };\n        this.setState({ isShowButton: !!this.filteredPickedTracks().length })\n\t}\n\n\tsendTracks = async () => {\n        if (!this.vkId) {\n            return await bridge.send('VKWebAppJoinGroup', {'group_id': 184374271});\n        }\n\n        if (!this.telegramId) {\n            this.hash = (await fetch(`${this.API_URL}/getHash?id=${this.vkId}`).then(res => res.json())).hash;\n            return this.setActiveModal('TelegramAuth');\n        }\n\n\t\tconst filteredPickedTracks = this.filteredPickedTracks();\n\t\t\n        this.setSnackbar();\n\n\t\tfetch(`${this.API_URL}/sendTracks?id=${this.telegramId}`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t  \t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(filteredPickedTracks),\n\t\t})\n\t}\n\n    setActiveModal = (activeModal) => {\n        this.setState({ activeModal });\n    };\n\n    filteredPickedTracks = () => {\n        return this.pickedTracks.filter(track => !!track)\n    }\n\n\tasync componentDidMount() {\n\t\tbridge.subscribe(async ({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tthis.setState({ scheme: data.scheme });\n\t\t\t} else if (type === 'VKWebAppInitResult') {\n\t\t\t\tthis.vkId = (await bridge.send(\"VKWebAppGetUserInfo\", {})).id;\n\t\t\t\tconst telegramId = (await bridge.send('VKWebAppStorageGet', {keys: ['telegramId']})).keys[0].value;\n                console.log(telegramId);\n\n                const response = await fetch(`${this.API_URL}/getUser?id=${this.vkId}`).then(res => res.json());\n                const permission = response.permission;\n                this.telegramId = response.telegramId;\n                console.log(this.telegramId);\n\n                if (!permission) {\n                    await bridge.send('VKWebAppJoinGroup', {'group_id': 184374271});\n                }\n\n                if (telegramId === 'null' && this.telegramId) {\n\t\t\t\t\tawait bridge.send('VKWebAppStorageSet', { key: 'telegramId', value: `${this.telegramId}` });\n                }\n\n\t\t\t\tif (!this.telegramId) {\n                    this.hash = (await fetch(`${this.API_URL}/getHash?id=${this.vkId}`).then(res => res.json())).hash;\n                    this.setActiveModal('TelegramAuth');\n\t\t\t\t}\n\n\t\t\t\tfetch(`${this.API_URL}/getTracks?id=${this.vkId}`)\n\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then(result => {\n\t\t\t\t\t\tthis.pickedTracks = new Array(result.tracks.length)\n\t\t\t\t\t\tthis.setState({ tracks: result.tracks })\n\t\t\t\t\t})\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n        const modal = (<ModalRoot\n                        activeModal={this.state.activeModal}\n                        onClose={this.modalBack}\n                      >\n                        <ModalCard\n                            id={ 'TelegramAuth' }\n                            onClose={() => this.setActiveModal(null)}\n                            header='–ê–≤—Ç–æ—Ä–∏–∑—É–π—Å—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ'\n                            caption='–ß—Ç–æ–±—ã —è —Å–º–æ–≥ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–±–µ —Ç—Ä–µ–∫ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –≤ –Ω–µ–º'\n                        >\n                            <Button \n                                style={{ marginTop: 16 }} \n                                mode='secondary' size='xl' \n                                href={ `https://t.me/ilushaR_bot?start=${this.vkId}-${this.hash}` }\n                                target='_blank'\n                            >\n                                    Telegram Authorization üîì\n                            </Button>\n                        </ModalCard>\n                      </ModalRoot>)\n\n\t\treturn (\n\t\t\t<ConfigProvider scheme={ this.state.scheme }>\n\t\t\t\t<View activePanel='main' modal={ modal }>\n\t\t\t\t\t<Panel id='main'>\n                        <PanelHeader left={\n                            <PanelHeaderButton onClick={ async () => {\n                                this.hash = (await fetch(`${this.API_URL}/getHash?id=${this.vkId}`).then(res => res.json())).hash;    \n                                this.setActiveModal('TelegramAuth') \n                            } \n                            }>–í—ã–±—Ä–∞—Ç—å –≤—Å–µ</PanelHeaderButton>\n                        }>\n                            Audio Bot\n                        </PanelHeader>\n\t\t\t\t\t\t{ this.state.tracks.map((track, index) => \n\t\t\t\t\t\t\t(<Div key={ track.id }>\n\t\t\t\t\t\t\t\t<SimpleCell \n\t\t\t\t\t\t\t\t\tbefore={\n\t\t\t\t\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\t\t\t\t\tsize='m' \n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: 40, height: 40, marginRight: 10, background: `url(${ track.album && track.album.thumb ? track.album.thumb.photo_68 : this.icon}) no-repeat center #e5ebf1`, backgroundSize: 'cover'}} \n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\tafter={ <Checkbox data-track={JSON.stringify({ index, url: track.url, title: track.title, artist: track.artist })} onChange={ this.onCheckboxChange }/> } \n\t\t\t\t\t\t\t\t\tdescription={ track.artist } \n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ track.title } \n\t\t\t\t\t\t\t\t</SimpleCell>\n\t\t\t\t\t\t\t</Div>)\n\t\t\t\t\t\t)}\n                        { this.state.isShowButton && \n\t\t\t\t\t\t<FixedLayout vertical='bottom'>\n\t\t\t\t\t\t\t<Separator wide />\n\t\t\t\t\t\t\t<Button \n                                onClick={ this.sendTracks } \n                                size='xl'\n                            >\n                                –°–∫–∞—á–∞—Ç—å\n                            </Button>\n\t\t\t\t\t\t</FixedLayout> }\n                        { this.state.snackbar }\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t\t</ConfigProvider>\n\t\t);\n\t}\n}\n\nexport default App;","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}